{"ast":null,"code":"var _jsxFileName = \"/home/bsquiat/Development/code/Phase2/my-bank-app/src/TransactionList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Transaction from './Transaction';\nimport SearchBar from './SearchBar';\n// import AddTransactionForm from './AddTransactionForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionList(props) {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showAddForm, setShowAddForm] = useState(false);\n  useEffect(() => {\n    fetch('http://localhost:8001/transactions').then(response => response.json()).then(data => setTransactions(data)).catch(error => console.error(error));\n  }, []);\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n\n  //   const handleAddTransaction = (transaction) => {\n  //     fetch('http://localhost:8001/transactions', {\n  //       method: 'POST',\n  //       headers: {\n  //         'Content-Type': 'application/json'\n  //       },\n  //       body: JSON.stringify(transaction)\n  //     })\n  //       .then(response => response.json())\n  //       .then(data => {\n  //         setTransactions([...transactions, data]);\n  //         setShowAddForm(false);\n  //       })\n  //       .catch(error => console.error(error));\n  //   };\n\n  const filteredTransactions = transactions.filter(transaction => {\n    const nameMatches = transaction.name.toLowerCase().includes(searchQuery);\n    const amountMatches = transaction.amount.toString().includes(searchQuery);\n    return nameMatches || amountMatches;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Recent Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), showAddForm ? /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      onAddTransaction: handleAddTransaction,\n      onCancel: () => setShowAddForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowAddForm(true),\n      children: \"Add Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), filteredTransactions.map(transaction => /*#__PURE__*/_jsxDEV(Transaction, {\n      transaction: transaction\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionList, \"IG+0loHnVC2wnkC1ghvm7J6FZD4=\");\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","useState","useEffect","Transaction","SearchBar","jsxDEV","_jsxDEV","TransactionList","props","_s","transactions","setTransactions","searchQuery","setSearchQuery","showAddForm","setShowAddForm","fetch","then","response","json","data","catch","error","console","handleSearch","query","filteredTransactions","filter","transaction","nameMatches","name","toLowerCase","includes","amountMatches","amount","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","AddTransactionForm","onAddTransaction","handleAddTransaction","onCancel","onClick","map","id","_c","$RefreshReg$"],"sources":["/home/bsquiat/Development/code/Phase2/my-bank-app/src/TransactionList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Transaction from './Transaction';\nimport SearchBar from './SearchBar';\n// import AddTransactionForm from './AddTransactionForm';\n\nfunction TransactionList(props) {\n  const [transactions, setTransactions] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [showAddForm, setShowAddForm] = useState(false);\n\n  useEffect(() => {\n    fetch('http://localhost:8001/transactions')\n      .then(response => response.json())\n      .then(data => setTransactions(data))\n      .catch(error => console.error(error));\n  }, []);\n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n  };\n\n//   const handleAddTransaction = (transaction) => {\n//     fetch('http://localhost:8001/transactions', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json'\n//       },\n//       body: JSON.stringify(transaction)\n//     })\n//       .then(response => response.json())\n//       .then(data => {\n//         setTransactions([...transactions, data]);\n//         setShowAddForm(false);\n//       })\n//       .catch(error => console.error(error));\n//   };\n\n  const filteredTransactions = transactions.filter(transaction => {\n    const nameMatches = transaction.name.toLowerCase().includes(searchQuery);\n    const amountMatches = transaction.amount.toString().includes(searchQuery);\n    return nameMatches || amountMatches;\n  });\n\n  return (\n    <div>\n      <h2>Recent Transactions</h2>\n      <SearchBar onSearch={handleSearch} />\n      {showAddForm ? (\n        <AddTransactionForm onAddTransaction={handleAddTransaction} onCancel={() => setShowAddForm(false)} />\n      ) : (\n        <button onClick={() => setShowAddForm(true)}>Add Transaction</button>\n      )}\n      {filteredTransactions.map(transaction => (\n        <Transaction key={transaction.id} transaction={transaction} />\n      ))}\n    </div>\n  );\n}\n\nexport default TransactionList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,eAAeA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC9B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,eAAe,CAACS,IAAI,CAAC,CAAC,CACnCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,YAAY,GAAIC,KAAK,IAAK;IAC9BZ,cAAc,CAACY,KAAK,CAAC;EACvB,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,MAAMC,oBAAoB,GAAGhB,YAAY,CAACiB,MAAM,CAACC,WAAW,IAAI;IAC9D,MAAMC,WAAW,GAAGD,WAAW,CAACE,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,CAACpB,WAAW,CAAC;IACxE,MAAMqB,aAAa,GAAGL,WAAW,CAACM,MAAM,CAACC,QAAQ,EAAE,CAACH,QAAQ,CAACpB,WAAW,CAAC;IACzE,OAAOiB,WAAW,IAAII,aAAa;EACrC,CAAC,CAAC;EAEF,oBACE3B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC5BlC,OAAA,CAACF,SAAS;MAACqC,QAAQ,EAAEjB;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,EACpC1B,WAAW,gBACVR,OAAA,CAACoC,kBAAkB;MAACC,gBAAgB,EAAEC,oBAAqB;MAACC,QAAQ,EAAEA,CAAA,KAAM9B,cAAc,CAAC,KAAK;IAAE;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,gBAErGlC,OAAA;MAAQwC,OAAO,EAAEA,CAAA,KAAM/B,cAAc,CAAC,IAAI,CAAE;MAAAqB,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC7D,EACAd,oBAAoB,CAACqB,GAAG,CAACnB,WAAW,iBACnCtB,OAAA,CAACH,WAAW;MAAsByB,WAAW,EAAEA;IAAY,GAAzCA,WAAW,CAACoB,EAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACE;AAEV;AAAC/B,EAAA,CApDQF,eAAe;AAAA0C,EAAA,GAAf1C,eAAe;AAsDxB,eAAeA,eAAe;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}