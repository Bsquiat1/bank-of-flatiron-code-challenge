{"ast":null,"code":"var _jsxFileName = \"/home/bsquiat/Development/code/Phase2/phase-2-code-challenge/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport TransactionList from './TransactionList';\nimport SearchBar from './SearchBar';\nimport AddTransactionForm from './AddTransaction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [searchQuery, setSearchQuery] = useState('');\n  const handleSearch = query => {\n    setSearchQuery(query);\n  };\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:8001/transactions').then(response => response.json()).then(data => setTransactions(data)).catch(error => console.log(error));\n  }, []);\n  const handleAddTransaction = newTransaction => {\n    fetch('http://localhost:8001/transactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTransaction)\n    }).then(response => response.json()).then(data => setTransactions([...transactions, data])).catch(error => console.log(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bank Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n      searchQuery: searchQuery\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTransactionForm, {\n      onAddTransaction: handleAddTransaction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"mV45h4i/UglaKMz4L+6sl4fIUpA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","TransactionList","SearchBar","AddTransactionForm","jsxDEV","_jsxDEV","App","_s","searchQuery","setSearchQuery","handleSearch","query","transactions","setTransactions","fetch","then","response","json","data","catch","error","console","log","handleAddTransaction","newTransaction","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","onAddTransaction","_c","$RefreshReg$"],"sources":["/home/bsquiat/Development/code/Phase2/phase-2-code-challenge/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport TransactionList from './TransactionList';\nimport SearchBar from './SearchBar';\nimport AddTransactionForm from './AddTransaction';\n\n\nfunction App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  \n\n  const handleSearch = (query) => {\n    setSearchQuery(query);\n  };\n  const [transactions, setTransactions] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:8001/transactions')\n      .then(response => response.json())\n      .then(data => setTransactions(data))\n      .catch(error => console.log(error));\n  }, []);\n\n  const handleAddTransaction = (newTransaction) => {\n    fetch('http://localhost:8001/transactions', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newTransaction)\n    })\n      .then(response => response.json())\n      .then(data => setTransactions([...transactions, data]))\n      .catch(error => console.log(error));\n  };\n\n\n  return (\n    <div>\n      <h1>Bank Transactions</h1>\n      <SearchBar onSearch={handleSearch} />\n      <TransactionList searchQuery={searchQuery} />\n      <AddTransactionForm onAddTransaction={handleAddTransaction} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,kBAAkB,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGlD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAGlD,MAAMW,YAAY,GAAIC,KAAK,IAAK;IAC9BF,cAAc,CAACE,KAAK,CAAC;EACvB,CAAC;EACD,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdc,KAAK,CAAC,oCAAoC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,eAAe,CAACK,IAAI,CAAC,CAAC,CACnCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,oBAAoB,GAAIC,cAAc,IAAK;IAC/CV,KAAK,CAAC,oCAAoC,EAAE;MAC1CW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,cAAc;IACrC,CAAC,CAAC,CACCT,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,eAAe,CAAC,CAAC,GAAGD,YAAY,EAAEM,IAAI,CAAC,CAAC,CAAC,CACtDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EACvC,CAAC;EAGD,oBACEf,OAAA;IAAAyB,QAAA,gBACEzB,OAAA;MAAAyB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAC1B7B,OAAA,CAACH,SAAS;MAACiC,QAAQ,EAAEzB;IAAa;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACrC7B,OAAA,CAACJ,eAAe;MAACO,WAAW,EAAEA;IAAY;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC7C7B,OAAA,CAACF,kBAAkB;MAACiC,gBAAgB,EAAEb;IAAqB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC1D;AAEV;AAAC3B,EAAA,CAtCQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}